@model StudentRateModel
@{
    ViewData["Title"] = "Contact";
    bool isTeacher = User.Claims.Any(c => (c.Type == "Type") && (c.Value == "Teacher"));
    bool isAdmin = User.Claims.Any(c => (c.Type == "Type") && (c.Value == "Admin"));
    bool isGroup = User.Claims.Any(c => (c.Type == "Type") && (c.Value == "Group"));
    var groups = Model.Groups;
    if (isTeacher)
    {
        groups.RemoveAll(g => !g.TeacherGroups.Any(tg => tg.TeacherId == Model.CurrentUserId));
    }
    if (isGroup)
    {
        groups.RemoveAll(g => g.Name != Model.CurrentUserName);
    }
}
@*@(Html
        .Grid(Model.Students)
        .Build(columns =>
        {
            columns.Add(student => student.UserName).Titled("Логин ученика");
            Model.Subjects.ForEach(subj => columns.Add(u => Model.Rates.FirstOrDefault(rate => rate.StudentId == u.Id && rate.SubjectId == subj.Id) == null ?
                                                            Model.Rates.FirstOrDefault(rate => rate.StudentId == u.Id && rate.SubjectId == subj.Id).Value : 0)
                                                            //.RenderedAs(
                                                            .Titled(subj.Name));


            // columns.Add(model => model.Birthday).Titled("Birth date");
            // columns.Add(model => model.IsWorking).Titled("Employed");
        })
        .Filterable()
        .Sortable()
        .Pageable()
    )*@
<h3>Оценки</h3>
<div>

    <ul class="nav nav-tabs" role="tablist">
        @foreach (var group in groups)
        {
            <li><a href="#grdiv_@group.Id" role="tab" data-toggle="tab">@group.Name</a></li>
        }
    </ul>

    <div class="tab-content">
        @foreach (var group in groups)
            {
            <div role="tabpanel" class="tab-pane" id="grdiv_@group.Id">

                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Ученик</th>
                            @foreach (var s in Model.Subjects)
                {
                                <th>@s.Name</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var stud in (isTeacher || isAdmin ? Model.Students :
isGroup ? Model.Students
: Model.Students.Where(s => s.Id == Model.CurrentUserId)).Where(u=>u.GroupId==group.Id))
                        {
                            <tr>
                                <td>@(stud.Claims.FirstOrDefault(c => c.ClaimType == "Name")?.ClaimValue ?? stud.UserName)</td>
                                @foreach (var s in Model.Subjects)
                    {
                        bool mySubject = isAdmin || User.Claims.Any(c => (c.Type == "Subject") && (c.Value == s.Id.ToString()));
                                    <td @(mySubject ? "class=success" : "") data-student-id="@stud.Id" data-subject-id="@s.Id" @(mySubject ? "contenteditable=true" : "")>@Model.Rates.SingleOrDefault(r => r.StudentId == stud.Id && r.SubjectId == s.Id)?.Value</td>
                                }
                            </tr>

                        }
                    </tbody>
                </table>

            </div> }

    </div>
</div>

<div id="alertok" style="position:fixed; top:50%; left:48%; display:none" class="alert alert-success">Оценка записана!</div>
<div id="alerterr" style="position:fixed; top:50%; left:48%; display:none" class="alert alert-success">Упс..</div>
<link href="~/lib/datatables.net-bs/css/dataTables.bootstrap.css" rel="stylesheet" />

@section Scripts{
<script src="~/lib/datatables.net/js/jquery.dataTables.js"></script>
<script src="~/lib/datatables.net-bs/js/dataTables.bootstrap.js"></script>
    <script>
        $('table').on('focus', '[contenteditable]', function () {
            var $this = $(this);
            $this.data('before', $this.html());
            return $this;
        }).on('focusout', '[contenteditable]', function () {
            var $this = $(this);
            if ($this.data('before') !== $this.html()) {
                $this.data('before', $this.html());
                $this.trigger('change');
                $.ajax({
                    url: "/Home/SetRate",
                    data: { studentId: $(this).data('student-id'), subjectId: $(this).data('subject-id'), value: $(this).html() },
                    type: 'post',
                    async: true,
                    success: function () { $('#alertok').show(); $('#alertok').fadeOut('slow'); },
                    error: function () { $('#alerterr').show(); $('#alerterr').fadeOut('slow'); }
                });
            }
            return $this;
            });
        $('table').dataTable({
            "lengthChange": false, "paging": false, "info": false,
            "searching":false
        });
    </script>
}
